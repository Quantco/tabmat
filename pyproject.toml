[build-system]
requires = [
  'setuptools', 
  'setuptools-scm', 
  'wheel',
  'mako',
  'oldest-supported-numpy',
  'Cython != 3.0.4',
]

[tool.ruff]
ignore = ["E731", "N802", "N803", "N806"]
line-length = 88
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # isort
  "I",
  # pep8-naming
  "N",
  # pyupgrade
  "UP",
]
target-version = "py39"

[tool.ruff.isort]
known-first-party = ["tabmat"]

[tool.mypy]
python_version = '3.9'

[tool.cibuildwheel]
skip = [
  "*-win32",
  "*-manylinux_i686",
  "pp*", 
  "*-musllinux_*",
  "cp36*",
  "cp37*",
  "cp38*",
]
test-requires = ["pytest", "pytest-xdist"]
test-command = "pytest {package}/tests/test_matrices.py"
# note: ARCHS_LINUX defined in build_wheels.yml file.

[tool.cibuildwheel.macos]
before-build = [
  "bash build_tools/prepare_macos_wheel.sh",
]

[tool.cibuildwheel.macos.environment]
LDFLAGS="-Wl,-rpath,$CONDA/envs/build/lib -L$CONDA/envs/build/lib -headerpad_max_install_names"
CFLAGS="-I$CONDA/envs/build/include"
CXXFLAGS="-I$CONDA/envs/build/include"
CXX="/usr/bin/clang++"
CC="/usr/bin/clang"
JE_INSTALL_SUFFIX="local"

[tool.cibuildwheel.windows]
before-all = [
  "C:\\Miniconda\\condabin\\conda install -c conda-forge \"xsimd<11\"",
]

[tool.cibuildwheel.windows.environment]
INCLUDE="C:\\\\Miniconda\\\\Library\\\\include"

[tool.cibuildwheel.linux]
before-all = [
  "cd ~/",
  "git clone --branch 5.3.0 https://github.com/jemalloc/jemalloc.git",
  "cd jemalloc",
  "./autogen.sh --disable-cxx --with-jemalloc-prefix=local --with-install-suffix=local --disable-tls --disable-initial-exec-tls",
  "make",
  "make install_bin install_include install_lib",
  "cd ~/",
  "git clone --branch 12.1.1 https://github.com/xtensor-stack/xsimd.git",
  "cd xsimd",
  "mkdir build",
  "cd build",
  "cmake -DCMAKE_INSTALL_PREFIX=/usr/local ..",
  "make install"
]
