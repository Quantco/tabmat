name: CI
on: [push]

jobs:
  pre-commit-checks:
    name: pre-commit checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      PRE_COMMIT_USE_MICROMAMBA: 1
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@d05808540d968a55ca33c798e0661fb98f533c73
      - name: Add micromamba to GITHUB_PATH
        run: echo "${HOME}/micromamba-bin" >> "$GITHUB_PATH"
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0

  unit-tests:
    name: Tests - ${{ matrix.os }} - Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include: # TODO: 3.7? what about 3.11? is every case covered?
          - { os: ubuntu-latest, python-version: '3.8' } # before we had 3.7, 3.8, 3.9, 3.10 in ubuntu-latest
          - { os: ubuntu-latest, python-version: '3.9' }
          - { os: ubuntu-latest, python-version: '3.10' }
          - { os: ubuntu-latest, python-version: '3.11' }
          - { os: macos-latest, python-version: '3.10' } # before we had 3.7 in macos-latest
          - { os: windows-latest, python-version: '3.10' } # before we had 3.7 in windows-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Set up conda env
        uses: mamba-org/setup-micromamba@875557da4ee020f18df03b8910a42203fbf02da1
        with:
          environment-file: ${{ matrix.os == 'windows-latest' && 'environment-win.yml' || 'environment.yml' }}
          init-shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}
          cache-environment: true
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Install repository (unix)
        if: matrix.os != 'windows-latest'
        shell: bash -el {0}
        run: pip install --no-use-pep517 --no-deps --disable-pip-version-check -e .
      - name: Install repository (windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: pip install --no-use-pep517 --no-deps --disable-pip-version-check -e .
      - name: Run pytest (unix)
        if: matrix.os != 'windows-latest'
        shell: bash -el {0}
        run: pytest -nauto tests -m "not high_memory" --doctest-modules src/
      - name: Run pytest (windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: pytest -nauto tests -m "not high_memory" --doctest-modules src/
