name: Build and upload to PyPI

on:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@2b72821d5ad7f6da3c003a3684ce341bf187b46f
      
      - name: Build wheels
        if: github.event_name != 'release'
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS_LINUX: auto
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_TEST_SKIP: '*-macosx_arm64'
      
      - name: Build wheels (release)
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS_LINUX: aarch64 aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_TEST_SKIP: '*-macosx_arm64'
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: python -m pip install setuptools setuptools-scm wheel mako numpy Cython 

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_testpypi:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: __token__
          password: ${{ secrets.GH_TESTPYPI_UPLOAD }}
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build_wheels, build_sdist, upload_testpypi]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: __token__
          password: ${{ secrets.GH_PYPI_UPLOAD }}
